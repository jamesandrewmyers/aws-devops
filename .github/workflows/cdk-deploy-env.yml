name: cdk-deploy-env
on:
  workflow_call:
    inputs:
      artifact-name: { type: string, default: 'lambda-bundle' }
      cdk-dir: { type: string, required: true }
      stack: { type: string, required: true }
      aws-account: { type: string, required: true }
      aws-region: { type: string, default: 'us-west-2' }
      role-to-assume: { type: string, required: true }

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout caller repository (consumer)
        uses: actions/checkout@v4
        with:
          # default checkout is the consumer repo that invoked this reusable workflow
          fetch-depth: 0

      - name: Checkout aws-devops repo (central CDK/runtime)
        uses: actions/checkout@v4
        with:
          repository: jamesandrewmyers/aws-devops
          path: aws-devops-repo
          # uses caller's token; available in reusable workflows
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Configure AWS creds via OIDC (assume role from input)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ inputs.role-to-assume }}
          aws-region: ${{ inputs.aws-region }}

      - name: whoami
        run: aws sts get-caller-identity --output json

      - name: Resolve CDK directory
        id: resolve_cdk
        run: |
          set -e
          INPUT="${{ inputs.cdk-dir }}"
          candidates=(
            "./$INPUT"
            "./iac/$INPUT"
            "aws-devops-repo/$INPUT"
            "aws-devops-repo/iac/$INPUT"
            "aws-devops-repo/iac/cdk"
            "./iac/cdk"
          )
          found=""
          for p in "${candidates[@]}"; do
            if [ -d "$p" ]; then
              echo "Found CDK dir: $p"
              found="$p"
              break
            fi
          done
          if [ -z "$found" ]; then
            echo "No CDK directory found. Tried: ${candidates[*]}"
            exit 1
          fi
          echo "cdk_dir=$found" >> $GITHUB_OUTPUT

      - name: Install CDK deps (resolved dir)
        run: |
          set -e
          CDK_DIR="${{ steps.resolve_cdk.outputs.cdk_dir }}"
          echo "Installing dependencies in $CDK_DIR"
          if [ -f "$CDK_DIR/requirements.txt" ]; then
            python -m pip install --upgrade pip
            python -m pip install -r "$CDK_DIR/requirements.txt" || true
          fi
          # install node deps if package.json exists
          if [ -f "$CDK_DIR/package.json" ]; then
            (cd "$CDK_DIR" && npm ci --silent) || true
          fi
          # ensure cdk available via npx
          npx cdk@latest --version || true

      - name: Prepare artifact for CDK (if present)
        if: always()
        run: |
          set -e
          # consumer artifact is expected at ./artifact (caller job used download-artifact)
          CDK_DIR="${{ steps.resolve_cdk.outputs.cdk_dir }}"
          if [ -d "./artifact" ]; then
            mkdir -p "$CDK_DIR/artifact"
            cp -R ./artifact/* "$CDK_DIR/artifact/" || true
            echo "artifact copied into $CDK_DIR/artifact/"
          else
            echo "No ./artifact directory present in workflow run; continuing."
          fi

      - name: CDK synth (resolved dir)
        working-directory: ${{ steps.resolve_cdk.outputs.cdk_dir }}
        run: |
          set -e
          npx cdk@latest synth

      - name: CDK deploy (resolved dir)
        working-directory: ${{ steps.resolve_cdk.outputs.cdk_dir }}
        run: |
          set -e
          npx cdk@latest deploy ${{ inputs.stack }} --require-approval never