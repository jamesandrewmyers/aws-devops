name: oidc-deep-debug
on: workflow_dispatch

permissions:
  id-token: write
  contents: read

jobs:
  debug:
    runs-on: ubuntu-latest
    steps:
      - name: Print basic GitHub context
        run: |
          echo "GITHUB_REPOSITORY=$GITHUB_REPOSITORY"
          echo "GITHUB_REF=$GITHUB_REF"
          echo "GITHUB_RUN_ID=$GITHUB_RUN_ID"
          echo "RUNNER_NAME=$RUNNER_NAME"
          echo "RUNNER_OS=$RUNNER_OS"

      - name: Show token-related env vars (presence)
        run: |
          echo "ACTIONS_ID_TOKEN_REQUEST_URL=${ACTIONS_ID_TOKEN_REQUEST_URL:-<not-set>}"
          if [ -n "${ACTIONS_ID_TOKEN_REQUEST_TOKEN:-}" ]; then
            echo "ACTIONS_ID_TOKEN_REQUEST_TOKEN=present"
          else
            echo "ACTIONS_ID_TOKEN_REQUEST_TOKEN=<not-present>"
          fi

      - name: Attempt to fetch ID token from runner (if URL present)
        run: |
          set -euo pipefail
          if [ -z "${ACTIONS_ID_TOKEN_REQUEST_URL:-}" ]; then
            echo "No ACTIONS_ID_TOKEN_REQUEST_URL available to steps on this runner; configure-aws-credentials will request token internally."
            exit 0
          fi

          echo "Request URL: $ACTIONS_ID_TOKEN_REQUEST_URL"
          resp=$(curl -fsS -H "Authorization: Bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" "$ACTIONS_ID_TOKEN_REQUEST_URL" || true)
          echo "raw response:"
          echo "$resp" | jq -C . || true

          token=$(echo "$resp" | jq -r '.value // .id_token // .token // empty')
          if [ -n "$token" ]; then
            echo "[debug] token extracted, writing /tmp/id_token.jwt"
            printf '%s' "$token" > /tmp/id_token.jwt

            # decode payload
            python - <<'PY'
import json,base64,sys
t = open('/tmp/id_token.jwt').read().strip()
parts = t.split('.')
if len(parts) < 2:
    print('token structure unexpected', file=sys.stderr)
    sys.exit(1)
payload = parts[1] + '=' * (-len(parts[1]) % 4)
print(json.dumps(json.loads(base64.urlsafe_b64decode(payload)), indent=2))
PY
          else
            echo "[debug] no token extracted from runner response"
          fi

      - name: Try manual STS assume-role-with-web-identity (shows AWS error if any)
        env:
          ROLE_ARN: arn:aws:iam::444101352833:role/gha-cdk-deploy-dev   # <<< REPLACE if needed
        run: |
          set -euo pipefail
          if [ -f /tmp/id_token.jwt ]; then
            echo "Calling aws sts assume-role-with-web-identity --role-arn $ROLE_ARN ..."
            aws sts assume-role-with-web-identity \
              --role-arn "$ROLE_ARN" \
              --role-session-name debug-session \
              --web-identity-token file:///tmp/id_token.jwt || true
          else
            echo "/tmp/id_token.jwt not present; skipping manual assume-role test"
          fi

      - name: Execute configure-aws-credentials action (normal path)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::444101352833:role/gha-cdk-deploy-dev
          aws-region: us-west-2

      - name: whoami (AWS)
        run: |
          set +e
          aws sts get-caller-identity --output json || true
